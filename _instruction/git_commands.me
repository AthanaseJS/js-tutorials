
// I. რეპოზიტარის გადმოტანა ლოკალურ
git clone https://github.com/AthanaseJS/js-exercises.git 
(კლონირების დროს დირქტორია ლოკალურ დისკზე ავტომატურად იქმნება)

// II. რეპოზიტარის რეგისტრაცია git-ში (ლიკალურად) 

git init
git status

git config --global user.name "Athanase"
git config --global user.email "amakaridi@gmail.com"
git cinfig --list     

git diff    // განსხვავების ჩვენება, გამოიყენება ცვლილების შემთხვევაში
git add (file name)
git add .  //  ან git add -A  //გაუქმება git reset

git commit -m "comments"

git branch                   // ბრენჩების ჩამონათვალი
git branch (new bracn Name)
git branch -M master         // ახალი შტოს შექმნა
git branch -d (branch Name)  // შტოს წაშლა

git remote add <name> <url>
git remote add origin https://github.com/AthanaseJS/git-basics.git
git pull  origin master    // take last verson from github
git push -u origin master

// ორი შტოს შერწყმა
git checkout ( branch name)    // ბრენჩზე გადართვა         git checkout -b ( branch name)  // create and switch
git pullgit  origin master
git branch --marged
git merge <branch name>
git push origin master

//შტოს წაშლა
git branch --merged
git branch -d <branch-name>
git branch -a
git push origin --delete <branch-name>

// II. არსებული პროექტის ლოკალურ მანქანაზე გადმოტანა
git clone https://github.com/.....   //  კლონირება



// დამატებითი
git help <verb>    // example of verbs: config, add,  
git <verb> --help 
git log            // კომიტების ლოგების ნახვა 
get remote -v      // რეპოზიტარების ჩამონათვალი